{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Juha\\\\Desktop\\\\Full_stack_open_2018\\\\7\\\\7_bloglist\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Juha\\\\Desktop\\\\Full_stack_open_2018\\\\7\\\\7_bloglist\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport blogService from '../services/blogs';\nexport var actionForCreating = function actionForCreating(content) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var blog, newState;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                blog = {\n                  author: content.author,\n                  title: content.title,\n                  url: content.url,\n                  likes: 0\n                };\n                _context.next = 3;\n                return blogService.create(blog);\n\n              case 3:\n                _context.next = 5;\n                return blogService.getAll();\n\n              case 5:\n                newState = _context.sent;\n                dispatch({\n                  type: 'CREATE',\n                  data: newState\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var actionForLike = function actionForLike(blog) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var likedBlog, newState;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                likedBlog = {\n                  user: blog.user,\n                  likes: blog.likes + 1,\n                  author: blog.author,\n                  title: blog.title,\n                  url: blog.url\n                };\n                _context2.next = 3;\n                return blogService.update(blog._id, likedBlog);\n\n              case 3:\n                _context2.next = 5;\n                return blogService.getAll();\n\n              case 5:\n                newState = _context2.sent;\n                dispatch({\n                  type: 'LIKE',\n                  data: newState\n                });\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var actionForDelete = function actionForDelete(blog) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!window.confirm(\"Are you sure you want to delete '\".concat(blog.title, \"' by \").concat(blog.author))) {\n                  _context3.next = 4;\n                  break;\n                }\n\n                _context3.next = 3;\n                return blogService.remove(blog._id);\n\n              case 3:\n                dispatch({\n                  type: 'DELETE',\n                  data: blog\n                });\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var initBlogs = function initBlogs() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch) {\n        var blogs;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return blogService.getAll();\n\n              case 2:\n                blogs = _context4.sent;\n                dispatch({\n                  type: 'INIT',\n                  data: blogs\n                });\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      return function (_x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n};\n\nvar blogReducer = function blogReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'CREATE':\n      return action.data;\n\n    case 'INIT':\n      return action.data;\n\n    case 'LIKE':\n      return action.data;\n\n    case 'DELETE':\n      return state.filter(function (x) {\n        return x._id !== action.data._id;\n      });\n  }\n\n  return state;\n};\n\nexport default blogReducer;","map":{"version":3,"sources":["C:\\Users\\Juha\\Desktop\\Full_stack_open_2018\\7\\7_bloglist\\src\\reducers\\blogReducer.js"],"names":["blogService","actionForCreating","content","dispatch","blog","author","title","url","likes","create","getAll","newState","type","data","actionForLike","likedBlog","user","update","_id","actionForDelete","window","confirm","remove","initBlogs","blogs","blogReducer","state","action","filter","x"],"mappings":"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","sourcesContent":["import blogService from '../services/blogs'\r\n\r\nexport const actionForCreating = (content) => {\r\n    return async (dispatch) => {\r\n        const blog = {\r\n            author: content.author,\r\n            title: content.title,\r\n            url: content.url,\r\n            likes: 0\r\n        }\r\n        await blogService.create(blog)\r\n        const newState = await blogService.getAll()\r\n        dispatch({\r\n            type: 'CREATE',\r\n            data: newState\r\n        })\r\n    }\r\n}\r\nexport const actionForLike = (blog) => {\r\n    return async (dispatch) => {\r\n        const likedBlog = {\r\n            user: blog.user,\r\n            likes: blog.likes + 1,\r\n            author: blog.author,\r\n            title: blog.title,\r\n            url: blog.url\r\n        }\r\n        await blogService.update(blog._id, likedBlog)\r\n        const newState = await blogService.getAll()\r\n        dispatch({\r\n            type: 'LIKE',\r\n            data: newState\r\n        })\r\n    }\r\n}\r\nexport const actionForDelete = (blog) => {\r\n    return async (dispatch) => {\r\n        if (window.confirm(`Are you sure you want to delete '${blog.title}' by ${blog.author}`)) {\r\n            await blogService.remove(blog._id)\r\n            dispatch({\r\n                type: 'DELETE',\r\n                data: blog\r\n            })\r\n        }\r\n    }\r\n}\r\nexport const initBlogs = () => {\r\n    return async (dispatch) => {\r\n        const blogs = await blogService.getAll()\r\n        dispatch({\r\n            type: 'INIT',\r\n            data: blogs\r\n        })\r\n    }\r\n}\r\nconst blogReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'CREATE':\r\n            return action.data\r\n        case 'INIT':\r\n            return action.data\r\n        case 'LIKE':\r\n            return action.data\r\n        case 'DELETE':\r\n            return state.filter(x => x._id !== action.data._id)\r\n    }\r\n    return state\r\n}\r\nexport default blogReducer"]},"metadata":{},"sourceType":"module"}